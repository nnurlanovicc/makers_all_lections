

# count = 0

# def counter():
#     global count
#     count += 1
#     return count


# name = input()
# age = input()
# print({'id': counter(), 'name': name, 'age': age})

# name = input()
# age = input()
# print({'id': counter(), 'name': name, 'age': age})

# name = input()
# age = input()
# print({'id': counter(), 'name': name, 'age': age})












































# database = [
#     {'username': 'RobStark', 'password': hash('1234test')},
#     {'username': 'JhonSnow', 'password': hash('19283746')},
#     {'username':'SansaStark', 'password': hash('87654321')}
# ]

# def in_database(username: str) -> bool:
#     for user in database:
#         if user['username'] == username:
#             return True
#     return False

# def get_user(username: str, password: str) -> dict:
#     if not in_database(username):
#         raise Exception('user is not found')
#     for user in database:
#         if user['username'] == username:
#             if user['password'] != hash(password):
#                 raise Exception('password is wrong')
#             else:
#                 return user

# def register(username: str, password: str, password_confirm: str) -> str:
#     if in_database(username):
#         raise Exception('name is not free')
#     if password != password_confirm:
#         raise Exception('passwords is not same')
#     new_user = {'username': username, 'password': hash(password)}
#     database.append(new_user)
#     return 'you signed up'


# def login(username: str, password: str) -> str:
#     get_user(username, password)
#     return 'you log in your account'


# def change_password(username, password):
#     user = get_user(username, password)
#     new_password = input('enter the new password: ')
#     index = database.index(user)
#     user_from_db = database[index]
#     user_from_db['password'] = hash(new_password)
#     return 'password updated'


# def delete_account(username: str, password: str):
#     user = get_user(username, password)
#     database.remove(user)
#     return 'account deleted'





# print(register('nurs','234565432','234565432'))
# print(login('nurs','234565432'))
# print(change_password('nurs','234565432'))
# print(delete_account('nurs','234565432'))

















































"""
- ü§ñ¬†****–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ (stack):****
    - Back-End
        - [Python](https://www.python.org/)
- ü´Ä¬†**CRUD**
    
    –í–∞–º –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª CRUD –∫—É—Ä—Å–∞. 
    
    –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—É—Ä—Å–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:
    
    - –ö–∞—Ç–µ–≥–æ—Ä–∏—è - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö:
        - –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
        - –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        - –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä
    - –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤—ã–±–æ—Ä –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö:
        - Python
        - JavaScript
        - Java
    - –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∞ (–º–∞–∫—Å–∏–º—É–º 60 —Å–∏–º–≤–æ–ª–æ–≤)
    - –û–ø–∏—Å–∞–Ω–∏–µ¬†–∫ –∫—É—Ä—Å—É (–º–∏–Ω–∏–º—É–º 10 —Å–ª–æ–≤)
    - –£—Ä–æ–≤–µ–Ω—å - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö:
        - –Ω–∞—á–∞–ª—å–Ω—ã–π
        - —Å—Ä–µ–¥–Ω–∏–π
        - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π
    - –¶–µ–Ω–∞ –∫—É—Ä—Å–∞  - –≤—Å–µ —Å—É–º–º—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Å–æ–º—ã
        - –≤–∞–ª—é—Ç–∞
        - —Å—É–º–º–∞
- ‚è≥¬†**Deadline**
    
    –ù–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –≤–∞–º –¥–∞–µ—Ç—Å—è 1 –¥–µ–Ω—å.
    
- **üòä –ó–∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º (–ü—Ä–∏–º–µ—Ä)**
    
    [Online Courses - Learn Anything, On Your Schedule | Udemy](https://www.udemy.com/)
"""




'''
–í–∞–º –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª CRUD –∫—É—Ä—Å–∞. 

–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—É—Ä—Å–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:

- –ö–∞—Ç–µ–≥–æ—Ä–∏—è - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö:
    - –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
    - –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    - –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä
- –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤—ã–±–æ—Ä –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö:
    - Python
    - JavaScript
    - Java
- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∞ (–º–∞–∫—Å–∏–º—É–º 60 —Å–∏–º–≤–æ–ª–æ–≤)
- –û–ø–∏—Å–∞–Ω–∏–µ –∫ –∫—É—Ä—Å—É (–º–∏–Ω–∏–º—É–º 10 —Å–ª–æ–≤)
- –£—Ä–æ–≤–µ–Ω—å - –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö:
    - –Ω–∞—á–∞–ª—å–Ω—ã–π
    - —Å—Ä–µ–¥–Ω–∏–π
    - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π
- –¶–µ–Ω–∞ –∫—É—Ä—Å–∞  - –≤—Å–µ —Å—É–º–º—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Å–æ–º—ã
    - –≤–∞–ª—é—Ç–∞
    - —Å—É–º–º–∞
'''

# categories = [
#     '–≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
#     '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
#     '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä'
# ]

# subcategories = [
#     'python',
#     'javaScript',
#     'java'
# ]

# levels = [
#     '–Ω–∞—á–∞–ª—å–Ω—ã–π',
#     '—Å—Ä–µ–¥–Ω–∏–π',
#     '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π'
# ]
# id = 0
# def get_id():
#     def inner():
#         global id
#         id += 1
#     inner()
#     return id


# db = {
#     get_id(): {
#         'category': '–≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
#         'subcategory': 'python',
#         'level': '–Ω–∞—á–∞–ª—å–Ω—ã–π',
#         'tilte': '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
#         'description': '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π –∏ –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã —Å –¥–µ—Ç—å–º–∏ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
#         'price': {'currency': '—Å–æ–º', 'sum': 5000}
#     }
# }

# def get_courses():
#     return db

# def get_course(id: int) -> dict:
#     course = db.get(id)
#     if course:
#         return course
#     else:
#         raise Exception('–¢–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞ –Ω–µ—Ç')
    

# Create Read Update Delete
# def validate_date(data):
#     if data['id']


# def create_course():
#     new_course = {
#         get_id(): {
#             'category': input(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {categories}: '),
#             'subcategory': input(f'–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é {subcategories}: '),
#             'level': input(f'–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∫—É—Ä—Å–∞ {levels}: '),
#             'title': input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: '),
#             'description': input('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: '),
#             'price': {'currency': input('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É (c–æ–º/dollar): '), 'sum': float(input('–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: '))}
#         }
#     }

    # print(new_course)
    # if new_course['id']['categoryh'] 


# create_course()









